pipeline {
  agent {
    docker {
      label 'payments-swarm'
      image 'combined-registry.sbx.zone/payments/liberty-maven:1.2'
      registryUrl 'https://combined-registry.sbx.zone/'
      registryCredentialsId 'registryCredentials'
    } 
  }


  stages {
      
    
   stage('Package') {
      steps {
          mvnLibertyPackage()
      }
    }

    stage('Sonar Analysis') {
      steps {
          mvnRunSonarInPublishMode()
      }
    }

    stage('Sonar Quality Gate Check') {
      steps {
        script {
        def taskID = sh(script: 'cat ./target/sonar/report-task.txt | grep "ceTaskId" | grep "^$ceTaskId" | cut -d"=" -f2-', returnStdout: true)
        checkSonarQualityGate(taskID)
        }
      }
    }

    stage('Install') {
      steps {
          mvnLibertyInstall()
      } 
    }

  }

  post {
    success {
      script {
            if(env.BRANCH == 'master'){
                executeIntegrationTestJob()
                executeUcdJobAppSign() 
            }
      }
      emailext(
           to: 'PaymentsBuild@na.LloydsBanking.com',
         mimeType: "text/html", 
         subject: "Successfull: Job '${env.JOB_NAME} - ${env.BUILD_NUMBER}'",
         body: '''${SCRIPT, template="groovy-html.template"}''')
         
    }
    failure {
      emailext(
           to: 'PaymentsBuild@na.LloydsBanking.com',
         mimeType: "text/html", 
         subject: "Failed: Job '${env.JOB_NAME} - ${env.BUILD_NUMBER}'",
         recipientProviders: 
         [
            [$class: 'UpstreamComitterRecipientProvider'],
      [$class: 'FailingTestSuspectsRecipientProvider'],
      [$class: 'FirstFailingBuildSuspectsRecipientProvider']
         ],
         body: '''${SCRIPT, template="groovy-html.template"}''')
         
    }
  }


}
  